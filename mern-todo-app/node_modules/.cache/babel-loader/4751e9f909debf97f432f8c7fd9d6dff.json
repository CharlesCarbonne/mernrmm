{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactRedux = require('react-redux');\n\nvar _getContext = require('recompose/getContext');\n\nvar _getContext2 = _interopRequireDefault(_getContext);\n\nvar _mapProps = require('recompose/mapProps');\n\nvar _mapProps2 = _interopRequireDefault(_mapProps);\n\nvar _compose = require('recompose/compose');\n\nvar _compose2 = _interopRequireDefault(_compose);\n\nvar _dataSelectors = require('../selectors/dataSelectors');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction hasWidthOrStyles(cellProperties) {\n  return cellProperties.hasOwnProperty('width') || cellProperties.hasOwnProperty('styles');\n}\n\nfunction getCellStyles(cellProperties, originalStyles) {\n  if (!hasWidthOrStyles(cellProperties)) {\n    return originalStyles;\n  }\n\n  var styles = originalStyles; // we want to take griddle style object styles, cell specific styles\n\n  if (cellProperties.hasOwnProperty('style')) {\n    styles = Object.assign({}, styles, originalStyles, cellProperties.style);\n  }\n\n  if (cellProperties.hasOwnProperty('width')) {\n    styles = Object.assign({}, styles, {\n      width: cellProperties.width\n    });\n  }\n\n  return styles;\n}\n\nvar ComposedCellContainer = function ComposedCellContainer(OriginalComponent) {\n  return (0, _compose2.default)((0, _getContext2.default)({\n    selectors: _react.PropTypes.object\n  }), (0, _reactRedux.connect)(function (state, props) {\n    return {\n      value: (0, _dataSelectors.cellValueSelector)(state, props),\n      customComponent: (0, _dataSelectors.customComponentSelector)(state, props),\n      cellProperties: (0, _dataSelectors.cellPropertiesSelector)(state, props),\n      className: (0, _dataSelectors.classNamesForComponentSelector)(state, 'Cell'),\n      style: (0, _dataSelectors.stylesForComponentSelector)(state, 'Cell')\n    };\n  }), (0, _mapProps2.default)(function (props) {\n    return _extends({}, props, {\n      style: getCellStyles(props.cellProperties, props.style),\n      value: props.customComponent ? _react2.default.createElement(props.customComponent, {\n        value: props.value,\n        griddleKey: props.griddleKey\n      }) : props.value\n    });\n  }))(function (_ref) {\n    var value = _ref.value,\n        style = _ref.style,\n        className = _ref.className;\n    return _react2.default.createElement(OriginalComponent, {\n      value: value,\n      style: style,\n      className: className\n    });\n  });\n};\n\nexports.default = ComposedCellContainer;","map":null,"metadata":{},"sourceType":"script"}