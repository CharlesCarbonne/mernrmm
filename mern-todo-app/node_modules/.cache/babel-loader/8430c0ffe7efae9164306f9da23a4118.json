{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getColumnPropertiesFromColumnArray = getColumnPropertiesFromColumnArray;\nexports.getColumnProperties = getColumnProperties;\n\nfunction containsColumnPropertiesArray(rowProperties) {\n  return rowProperties && rowProperties.props && rowProperties.props.children && Array.isArray(rowProperties.props.children);\n}\n\nfunction containsColumnPropertiesObject(rowProperties) {\n  return rowProperties && rowProperties.props && rowProperties.props.children;\n}\n/** Gets a column properties object from an array of columnNames\n * @param {Array<string>} columns - array of column names\n */\n\n\nfunction getColumnPropertiesFromColumnArray(columns) {\n  return columns.reduce(function (previous, current) {\n    previous[current] = {\n      id: current\n    };\n    return previous;\n  }, {});\n}\n/** Gets the column properties object from a react component (rowProperties) that contains child component(s) for columnProperties.\n *    If no properties are found, it will work return a column properties object based on the all columns array\n * @param {Object} rowProperties - An React component that contains the rowProperties and child columnProperties components\n * @param {Array<string> optional} allColumns - An optional array of colummn names. This will be used to generate the columnProperties when they are not defined in rowProperties\n */\n\n\nfunction getColumnProperties(rowProperties) {\n  var allColumns = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var columnProperties = {}; // Working against an array of columnProperties\n\n  if (containsColumnPropertiesArray(rowProperties)) {\n    // build one object that contains all of the column properties keyed by id\n    columnProperties = rowProperties.props.children.reduce(function (previous, current) {\n      previous[current.props.id] = current.props;\n      return previous;\n    }, {}); // Working against a lone, columnProperties object\n  } else if (containsColumnPropertiesObject(rowProperties)) {\n    columnProperties[rowProperties.props.children.props.id] = rowProperties.props.children.props;\n  }\n\n  if (Object.keys(columnProperties).length === 0 && allColumns) {\n    columnProperties = getColumnPropertiesFromColumnArray(allColumns);\n  }\n\n  return columnProperties;\n}","map":null,"metadata":{},"sourceType":"script"}